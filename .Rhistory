"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`
)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets1 <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`)
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets1, file = "Authorization Log Analysis 1.xlsx")
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 1.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 1.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
ATO_FRReadyFirst_Count <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
group_by(FedRAMP_Ready_First) %>% #grouping by FedRAMP_Ready_First
summarize(n_Authorizations = n()) #getting the count
ATO_FRReadyFirst_Count
ATO_FRReadyFirst_Compliant <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
ATO_FRReadyFirst_Compliant
ATO_FRReadyFirst_Compliant_AvsI_Count <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
summarize(n_Authorizations = n()) #getting the count
ATO_FRReadyFirst_Compliant_AvsI_Count
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoFRIP = as.numeric(`FedRAMP_In-Process_Date` - FedRAMP_Ready_Date),
Time_FRRtoFRIP = as.character(dweeks(Time_in_Days_FRRtoFRIP))) %>% #finding the time difference
select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`, FedRAMP_Ready_First, Time_in_Days_FRRtoFRIP,  Time_FRRtoFRIP)
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoA = as.numeric(Authorization_Date - FedRAMP_Ready_Date),
Time_FRRtoA = as.character(dweeks(Time_in_Days_FRRtoA))) %>% #finding the time difference
select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`, FedRAMP_Ready_First, Time_in_Days_FRRtoA,  Time_FRRtoA)
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA
ATO_Agencies_Count <- Authorization_Log %>%
group_by(Authorizing_Agency) %>% #grouping by Authorizing_Agency
summarize(n_Authorizations = n()) %>% #getting the count
arrange(desc(n_Authorizations)) #arranging to see the largest count first
ATO_Agencies_Count
ATO_FRReady_Authorized_Count <- Authorization_Log %>%
filter(!is.na(FedRAMP_Ready_Date) & Designation == "Compliant" & `Active-Inactive` == "Active") %>% #filtering based on if they are FedRAMP_Ready, Designation is Compliant and they are Active
select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`)
ATO_FRReady_Authorized_Count
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets1 <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`)
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets1, file = "Authorization Log Analysis 1.xlsx")
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- zip_list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`)
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRReadyFirst_Compliant_AvsI_Count" = `FRRFirst_Compliant_AvsI_Count`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP" = `FRRFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA" = `FRRFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets1 <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`)
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"FRRFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"FRRFirst_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"FRRFirst_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets1, file = "Authorization Log Analysis 1.xlsx")
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"FRRFirst_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`)
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets1 <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`)
list_of_datasets2 <- list("ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"FRRF_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"FRRF_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"FRRF_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets1, file = "Authorization Log Analysis 1.xlsx")
write.xlsx(list_of_datasets2, file = "Authorization Log Analysis 2.xlsx")
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets1 <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"FRRF_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"FRRF_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"FRRF_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets1, file = "Authorization Log Analysis 1.xlsx")
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"FRRF_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"FRRF_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"FRRF_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
ATO_FRReady_Authorized_Count <- Authorization_Log %>%
filter(!is.na(FedRAMP_Ready_Date) & Designation == "Compliant" & `Active-Inactive` == "Active") #%>% #filtering based on if they are FedRAMP_Ready, Designation is Compliant and they are Active
#select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`)
ATO_FRReady_Authorized_Count
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoA = as.numeric(Authorization_Date - FedRAMP_Ready_Date),
Time_FRRtoA = as.character(dweeks(Time_in_Days_FRRtoA))) #%>% #finding the time difference
#select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`, FedRAMP_Ready_First, Time_in_Days_FRRtoA,  Time_FRRtoA)
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoFRIP = as.numeric(`FedRAMP_In-Process_Date` - FedRAMP_Ready_Date),
Time_FRRtoFRIP = as.character(dweeks(Time_in_Days_FRRtoFRIP))) #%>% #finding the time difference
#select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`, FedRAMP_Ready_First, Time_in_Days_FRRtoFRIP,  Time_FRRtoFRIP)
ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"FRRF_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"FRRF_Compliant_AvsI_TimeFRRtoFRIP" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoFRIP`,
"FRRF_Compliant_AvsI_TimeFRRtoA" = `ATO_FRReadyFirst_Compliant_AvsI_TimeFRRtoA`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
knitr::opts_chunk$set(echo = TRUE)
#If packages are not installed on your computer, need to uncomment and install the following packages.
#install.packages("readxl")
#install.packages("stringr")
#install.packages("tidyverse")
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("plyr")
#install.packages("lubridate")
#Loading the different libraries needed. If they are not installed see comment above.
library(stringr)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(plyr)
library(lubridate)
ATO_FRReadyFirst_Compliant_AvsI_Time <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoFRIP = as.numeric(`FedRAMP_In-Process_Date` - FedRAMP_Ready_Date),
Time_FRRtoFRIP = as.character(dweeks(Time_in_Days_FRRtoFRIP)),
Time_in_Days_FRRtoA = as.numeric(Authorization_Date - FedRAMP_Ready_Date),
Time_FRRtoA = as.character(dweeks(Time_in_Days_FRRtoA))) #%>% #finding the time difference
#select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`, FedRAMP_Ready_First, Time_in_Days_FRRtoFRIP,  Time_FRRtoFRIP, Time_in_Days_FRRtoA,  Time_FRRtoA)
ATO_FRReadyFirst_Compliant_AvsI_Time
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRReadyFirst_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRReadyFirst_Compliant" = `ATO_FRReadyFirst_Compliant`,
"RF_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"RF_Compliant_AvsI_Time" = `ATO_FRReadyFirst_Compliant_AvsI_Time`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRRF_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRRF_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRRF_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRRF_Compliant_AvsI_Time" = `ATO_FRReadyFirst_Compliant_AvsI_Time`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
ATO_FRReadyFirst_Compliant_AvsI_Time <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoFRIP = as.numeric(`FedRAMP_In-Process_Date` - FedRAMP_Ready_Date))
ATO_FRReadyFirst_Compliant_AvsI_Time
ATO_FRReadyFirst_Compliant_AvsI_Time <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoFRIP = (`FedRAMP_In-Process_Date` - FedRAMP_Ready_Date))
ATO_FRReadyFirst_Compliant_AvsI_Time
ATO_FRReadyFirst_Compliant_AvsI_Time <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoFRIP = (`FedRAMP_In-Process_Date` - FedRAMP_Ready_Date))
Time_in_Days_FRRtoA = as.numeric(Authorization_Date - FedRAMP_Ready_Date)) #%>% #finding the time difference
ATO_FRReadyFirst_Compliant_AvsI_Time <- Authorization_Log %>%
mutate(FedRAMP_Ready_First =
ifelse(is.na(FedRAMP_Ready_Date) & is.na(`FedRAMP_In-Process_Date`), "NA",
ifelse(is.na(FedRAMP_Ready_Date) & !is.na(`FedRAMP_In-Process_Date`), "FALSE",
ifelse(is.na(`FedRAMP_In-Process_Date`) & !is.na(FedRAMP_Ready_Date), "TRUE",
ifelse(FedRAMP_Ready_Date < `FedRAMP_In-Process_Date`, "TRUE", "FALSE"))))) %>% #creating the variable FedRAMP_Ready_First based on FedRAMP_Ready_Date and FedRAMP_In-Process_Date
filter(FedRAMP_Ready_First == "TRUE" & Designation == "Compliant") %>% #filtering based on if FedRAMP_Ready_First is TRUE and Designation is Compliant
group_by(`Active-Inactive`) %>% #grouping by Active-Inactive
mutate(Time_in_Days_FRRtoFRIP = (`FedRAMP_In-Process_Date` - FedRAMP_Ready_Date),
Time_in_Days_FRRtoA = as.numeric(Authorization_Date - FedRAMP_Ready_Date)) #%>% #finding the time difference
#select(Fiscal_Year_ID, Fiscal_Year, CSP, Service_Model, Path, Authorization_Date, `Active-Inactive`, Designation, Deployment_Model, Impact_Level, Authorizing_Agency, Sponsoring_Agency, FedRAMP_Ready_Date, `FedRAMP_In-Process_Date`, FedRAMP_Ready_First, Time_in_Days_FRRtoFRIP,  Time_FRRtoFRIP, Time_in_Days_FRRtoA,  Time_FRRtoA)
ATO_FRReadyFirst_Compliant_AvsI_Time
library(openxlsx)
#exporting the data to make a list with all the data frames created in to the same data set with different sheets
list_of_datasets <- list("Cleaned" = `Authorization_Log`,
"ATO_count" = `ATO_count`,
"ATO_Year_Count" = `ATO_Year_Count`,
"ATO_Year_IL_Count" = `ATO_Year_IL_Count`,
"ATO_Year_SM_Count" = `ATO_Year_SM_Count`,
"ATO_Year_Path_Count" = `ATO_Year_Path_Count`,
"ATO_AvsI_Count" = `ATO_AvsI_Count`,
"ATO_Path_AvsI_Count" = `ATO_Path_AvsI_Count`,
"ATO_DM_Count" = `ATO_DM_Count`,
"ATO_DM_AvsI_Count" = `ATO_DM_AvsI_Count`,
"ATO_IL_Count" = `ATO_IL_Count`,
"ATO_IL_AvsI_Count" = `ATO_IL_AvsI_Count`,
"ATO_SM_Count" = `ATO_SM_Count`,
"ATO_CFOActA_Count" = `ATO_CFOActA_Count`,
"ATO_FRRF_Count" = `ATO_FRReadyFirst_Count`,
"ATO_FRRF_Compliant" = `ATO_FRReadyFirst_Compliant`,
"ATO_FRRF_Compliant_AvsI_Count" = `ATO_FRReadyFirst_Compliant_AvsI_Count`,
"ATO_FRRF_Compliant_AvsI_Time" = `ATO_FRReadyFirst_Compliant_AvsI_Time`,
"ATO_Agencies_Count" = `ATO_Agencies_Count`,
"ATO_FRReady_Authorized_Count" = `ATO_FRReady_Authorized_Count`)
write.xlsx(list_of_datasets, file = "Authorization Log Analysis.xlsx")
